{"version":3,"sources":["Search.js","App.js","index.js"],"names":["apiKey","Search","forwardRef","props","ref","searchInputRef","useRef","authorInputRef","languageInputRef","useState","startIndex","setStartIndex","useImperativeHandle","searchBooks","axios","get","current","value","length","then","response","data","items","forEach","item","volumeInfo","language","entry","title","imageLinks","thumbnail","description","onSearch","catch","error","console","log","add10","prevStartIndex","Form","Row","className","Group","as","Col","sm","md","Label","htmlFor","Control","id","type","placeholder","name","defaultValue","Button","variant","onClick","e","preventDefault","onReset","App","books","setBooks","searchComponentRef","observer","infiniteScroll","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","truncate","str","limit","split","splice","join","book","prevBooks","map","i","key","Container","Card","style","width","Img","src","alt","Body","Title","Text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbdff1f.chunk.js","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'AIzaSyBnRe4iMzT3guJYJbJs9gwn4cwUmRVLhZs';\r\n\r\nexport async function searchBooks2() {\r\n  return await axios\r\n    .get(\r\n      `https://www.googleapis.com/books/v1/volumes?q=test&key=AIzaSyBnRe4iMzT3guJYJbJs9gwn4cwUmRVLhZs`\r\n    )\r\n    .then((response) => {\r\n      return response.data.items[0].volumeInfo.title;\r\n    });\r\n}\r\nconst Search = forwardRef((props, ref) => {\r\n  const searchInputRef = useRef(null);\r\n  const authorInputRef = useRef(null);\r\n  const languageInputRef = useRef(null);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    searchBooks() {\r\n      axios\r\n        .get(\r\n          authorInputRef.current.value.length > 0\r\n            ? `https://www.googleapis.com/books/v1/volumes?q=${searchInputRef.current.value}+inauthor:${authorInputRef.current.value}&startIndex=${startIndex}&key=${apiKey}`\r\n            : `https://www.googleapis.com/books/v1/volumes?q=${searchInputRef.current.value}&startIndex=${startIndex}&key=${apiKey}`\r\n        )\r\n        .then((response) => {\r\n          response.data.items.forEach((item) => {\r\n            if (\r\n              languageInputRef.current.value === item.volumeInfo.language ||\r\n              languageInputRef.current.value === 'any language'\r\n              //   &&\r\n              // item.volumeInfo.publishedDate\r\n              //   ? verifyStartDate(item.volumeInfo.publishedDate) &&\r\n              //     verifyEndDate(item.volumeInfo.publishedDate)\r\n              //   : true\r\n            ) {\r\n              const entry = [\r\n                item.volumeInfo.title\r\n                  ? item.volumeInfo.title\r\n                  : '(missing title)',\r\n                item.volumeInfo.imageLinks\r\n                  ? item.volumeInfo.imageLinks.thumbnail\r\n                  : '',\r\n                item.volumeInfo.description\r\n                  ? item.volumeInfo.description\r\n                  : '(missing description)',\r\n              ];\r\n              props.onSearch(entry);\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    add10() {\r\n      setStartIndex((prevStartIndex) => prevStartIndex + 10);\r\n    },\r\n  }));\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onReset();\r\n    ref.current.searchBooks();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row className=\"justify-content-center\">\r\n          <Form.Group as={Col} sm={6} md={4}>\r\n            <Form.Label htmlFor=\"searchInput\">Search</Form.Label>\r\n            <Form.Control\r\n              id=\"searchInput\"\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              placeholder=\"Search your book...\"\r\n              name=\"search\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Form.Group as={Col} sm={6} md={4}>\r\n            <Form.Label htmlFor=\"authorInput\">Author</Form.Label>\r\n            <Form.Control\r\n              id=\"authorInput\"\r\n              ref={authorInputRef}\r\n              type=\"text\"\r\n              placeholder=\"Specify the author...\"\r\n              name=\"author\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Form.Group as={Col} sm={6} md={4}>\r\n            <Form.Label htmlFor=\"languageInput\">Language</Form.Label>\r\n            <Form.Control\r\n              id=\"languageInput\"\r\n              ref={languageInputRef}\r\n              as=\"select\"\r\n              defaultValue=\"any language\"\r\n            >\r\n              <option value=\"any language\">any language</option>\r\n              <option value=\"ar\">Arabic</option>\r\n              <option value=\"zh\">Chinese</option>\r\n              <option value=\"da\">Danish</option>\r\n              <option value=\"nl\">Dutch</option>\r\n              <option value=\"en\">English</option>\r\n              <option value=\"fi\">Finnish</option>\r\n              <option value=\"fr\">French</option>\r\n              <option value=\"de\">German</option>\r\n              <option value=\"hi\">Hindi</option>\r\n              <option value=\"it\">Italian</option>\r\n              <option value=\"ja\">Japanese</option>\r\n              <option value=\"ko\">Korean</option>\r\n              <option value=\"no\">Norwegian</option>\r\n              <option value=\"pl\">Polish</option>\r\n              <option value=\"ru\">Russian</option>\r\n              <option value=\"es\">Spanish</option>\r\n              <option value=\"sv\">Swedish</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Search;\r\n","import React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Col from 'react-bootstrap/Col';\nimport Search from './Search.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\n\nimport './App.css';\n\nexport default function App() {\n  const [books, setBooks] = useState([]);\n  const searchComponentRef = useRef();\n\n  const observer = useRef();\n\n  function infiniteScroll(node) {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        searchComponentRef.current.add10();\n        searchComponentRef.current.searchBooks();\n      }\n    });\n\n    if (node) observer.current.observe(node);\n  }\n\n  function handleSearch(book) {\n    setBooks((prevBooks) => {\n      return [...prevBooks, book];\n    });\n  }\n\n  function resetSearch() {\n    setBooks([]);\n  }\n\n  function truncate(str, limit) {\n    return str.split(' ').splice(0, limit).join(' ');\n  }\n\n  return (\n    <div className=\"App\">\n      <Search\n        onSearch={handleSearch}\n        onReset={resetSearch}\n        ref={searchComponentRef}\n      ></Search>\n      {books.map((book, i) => {\n        if (books.length === i + 1) {\n          return (\n            <div ref={infiniteScroll} as={Col} key={i}>\n              <Container className=\"mb-4 mt-4\">\n                <Row className=\"justify-content-md-center\">\n                  <Card style={{ width: '18rem' }}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={book[1]}\n                      alt=\"(missing thumbnail)\"\n                    />\n                    <Card.Body>\n                      <Card.Title>{book[0]}</Card.Title>\n                      <Card.Text>{truncate(book[2], 15) + ' (...)'}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Row>\n              </Container>\n            </div>\n          );\n        } else {\n          return (\n            <div as={Col} key={i}>\n              <Container className=\"mb-4 mt-4\">\n                <Row className=\"justify-content-md-center\">\n                  <Card style={{ width: '18rem' }}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={book[1]}\n                      alt=\"(missing thumbnail)\"\n                    />\n                    <Card.Body>\n                      <Card.Title>{book[0]}</Card.Title>\n                      <Card.Text>{truncate(book[2], 15) + ' (...)'}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Row>\n              </Container>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}